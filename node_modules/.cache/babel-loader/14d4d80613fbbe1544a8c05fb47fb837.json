{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renan\\\\Desktop\\\\Renan\\\\Cursos\\\\exercicios_webpac\\\\projeto\\\\reactjs-project-1\\\\src\\\\templates\\\\Home\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { loadPosts } from '../../utils/load-posts/load-posts';\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button';\nimport { TextInput } from '../../components/TextImput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [postsPerPage, setPostPerPage] = useState(10);\n  const [searchValue, setSearchValue] = useState('');\n  const noMorePosts = postsPerPage >= allPosts.length;\n  const filteredPosts = searchValue ? allPosts.filter(post => {\n    return post.title.toLowerCase().includes(searchValue.toLowerCase());\n  }) : posts;\n  const handleLoadPosts = useCallback(async (inicialValue, postsPerPage) => {\n    const postsAndPhotos = await loadPosts();\n    setPosts(postsAndPhotos.slice(0, postsPerPage));\n    setAllPosts(postsAndPhotos);\n  }, []);\n\n  const loadMorePosts = () => {\n    const nextPosts = allPosts.slice(postsPerPage, postsPerPage + 2);\n    posts.push(...nextPosts);\n    setPosts(posts);\n    setPostPerPage(postsPerPage + 2);\n  };\n\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    handleLoadPosts(0, postsPerPage);\n  }, [handleLoadPosts, postsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-conteiner\",\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        searchValue: searchValue,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), filteredPosts.length > 0 ? /*#__PURE__*/_jsxDEV(Posts, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"there are not any posts with those names :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Load More Posts\",\n        onClick: loadMorePosts,\n        disabled: noMorePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n/* export class Home2 extends Component {\n  state = {\n    posts: [],\n    allPosts: [],\n    page: 0,\n    postsPerPage: 2,\n    searchValue: ''\n  };\n\n  async componentDidMount() {\n    await this.loadPosts();\n  }\n\n  loadPosts = async () => {\n    const { page, postsPerPage } = this.state;\n\n    const postsAndPhotos = await loadPosts();\n\n    this.setState({\n      posts: postsAndPhotos.slice(page, postsPerPage),\n      allPosts: postsAndPhotos,\n    });\n  };\n\n  loadMorePosts = () => {\n    const { postsPerPage, posts, allPosts } = this.state;\n    const nextPosts = allPosts.slice(postsPerPage, postsPerPage + 2);\n    posts.push(...nextPosts);\n    this.setState({\n      posts,\n      postsPerPage: postsPerPage + 2,\n    });\n  };\n\n  handleChange = (e) =>{\n    this.setState({searchValue: e.target.value})\n  }\n\n  render() {\n    const { posts, postsPerPage, allPosts, searchValue } = this.state;\n    const noMorePosts = postsPerPage >= allPosts.length\n    const filteredPosts = !!searchValue ?\n    allPosts.filter(post => {\n      return post.title.toLowerCase().includes(\n        searchValue.toLowerCase()\n      )\n    })\n    : posts;\n\n    return (\n      <section className=\"container\">\n        <h2>{searchValue}</h2>\n\n        <div className=\"input-conteiner\">\n        <TextInput searchValue={searchValue} handleChange={this.handleChange}/>\n        </div>\n\n        {filteredPosts.length > 0 ? <Posts posts={filteredPosts} /> : <p>there are not any posts with those names :(</p>}\n\n        <div className=\"button-container\">\n          {!searchValue && (\n          <Button\n          text=\"Load More Posts\"\n          onClick={this.loadMorePosts}\n          disabled={noMorePosts}\n          />\n          )}\n        </div>\n      </section>\n    );\n  }\n}*/\n\n_s(Home, \"A9WbWgAJKvG5vhwgRC4fShpQPHI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Renan/Desktop/Renan/Cursos/exercicios_webpac/projeto/reactjs-project-1/src/templates/Home/index.jsx"],"names":["React","useEffect","useState","useCallback","loadPosts","Posts","Button","TextInput","Home","posts","setPosts","allPosts","setAllPosts","postsPerPage","setPostPerPage","searchValue","setSearchValue","noMorePosts","length","filteredPosts","filter","post","title","toLowerCase","includes","handleLoadPosts","inicialValue","postsAndPhotos","slice","loadMorePosts","nextPosts","push","handleChange","e","target","value"],"mappings":"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","sourcesContent":["import './styles.css';\nimport React from 'react'\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { loadPosts } from '../../utils/load-posts/load-posts';\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button';\nimport { TextInput } from '../../components/TextImput';\n\nexport const Home = () => {\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [postsPerPage, setPostPerPage] = useState(10);\n  const [searchValue, setSearchValue] = useState('');\n\n  const noMorePosts = postsPerPage >= allPosts.length;\n  const filteredPosts = searchValue\n    ? allPosts.filter((post) => {\n        return post.title.toLowerCase().includes(searchValue.toLowerCase());\n      })\n    : posts;\n\n  const handleLoadPosts = useCallback(async (inicialValue, postsPerPage) => {\n    const postsAndPhotos = await loadPosts();\n\n    setPosts(postsAndPhotos.slice(0, postsPerPage));\n    setAllPosts(postsAndPhotos);\n  }, []);\n\n  const loadMorePosts = () => {\n    const nextPosts = allPosts.slice(postsPerPage, postsPerPage + 2);\n    posts.push(...nextPosts);\n\n    setPosts(posts);\n    setPostPerPage(postsPerPage + 2);\n  };\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    handleLoadPosts(0, postsPerPage);\n  }, [handleLoadPosts, postsPerPage]);\n\n  return (\n    <section className=\"container\">\n      <h2>{searchValue}</h2>\n\n      <div className=\"input-conteiner\">\n        <TextInput searchValue={searchValue} handleChange={handleChange} />\n      </div>\n\n      {filteredPosts.length > 0 ? <Posts posts={filteredPosts} /> : <p>there are not any posts with those names :(</p>}\n\n      <div className=\"button-container\">\n        {!searchValue && <Button text=\"Load More Posts\" onClick={loadMorePosts} disabled={noMorePosts} />}\n      </div>\n    </section>\n  );\n};\n\n/* export class Home2 extends Component {\n  state = {\n    posts: [],\n    allPosts: [],\n    page: 0,\n    postsPerPage: 2,\n    searchValue: ''\n  };\n\n  async componentDidMount() {\n    await this.loadPosts();\n  }\n\n  loadPosts = async () => {\n    const { page, postsPerPage } = this.state;\n\n    const postsAndPhotos = await loadPosts();\n\n    this.setState({\n      posts: postsAndPhotos.slice(page, postsPerPage),\n      allPosts: postsAndPhotos,\n    });\n  };\n\n  loadMorePosts = () => {\n    const { postsPerPage, posts, allPosts } = this.state;\n    const nextPosts = allPosts.slice(postsPerPage, postsPerPage + 2);\n    posts.push(...nextPosts);\n    this.setState({\n      posts,\n      postsPerPage: postsPerPage + 2,\n    });\n  };\n\n  handleChange = (e) =>{\n    this.setState({searchValue: e.target.value})\n  }\n\n  render() {\n    const { posts, postsPerPage, allPosts, searchValue } = this.state;\n    const noMorePosts = postsPerPage >= allPosts.length\n    const filteredPosts = !!searchValue ?\n    allPosts.filter(post => {\n      return post.title.toLowerCase().includes(\n        searchValue.toLowerCase()\n      )\n    })\n    : posts;\n\n    return (\n      <section className=\"container\">\n        <h2>{searchValue}</h2>\n\n        <div className=\"input-conteiner\">\n        <TextInput searchValue={searchValue} handleChange={this.handleChange}/>\n        </div>\n\n        {filteredPosts.length > 0 ? <Posts posts={filteredPosts} /> : <p>there are not any posts with those names :(</p>}\n\n        <div className=\"button-container\">\n          {!searchValue && (\n          <Button\n          text=\"Load More Posts\"\n          onClick={this.loadMorePosts}\n          disabled={noMorePosts}\n          />\n          )}\n        </div>\n      </section>\n    );\n  }\n}*/\n"]},"metadata":{},"sourceType":"module"}